services:
  api:
    container_name: evolution_api
    image: evoapicloud/evolution-api:latest
    restart: always
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - evolution_instances:/evolution/instances
    networks:
      - evolution-net
    env_file:
      - .env
    environment:
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      # DATABASE_URL: "postgresql://user:pass@postgres:5432/evolution"
    expose:
      - "8080"
    healthcheck:
      test: ["CMD-SHELL", "wget -qO- http://127.0.0.1:8080/health || exit 1"]
      interval: 15s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7.2-alpine
    container_name: redis
    networks:
      - evolution-net
    command:
      - redis-server
      - --port
      - "6379"
      - --save
      - ""                # sin RDB (cache)
      - --appendonly
      - "no"              # sin AOF (cache)
      - --maxmemory
      - "256mb"
      - --maxmemory-policy
      - allkeys-lru
      - --bind
      - 0.0.0.0
      - --protected-mode
      - "no"              # necesario si expones fuera del loopback (red interna)
      - --tcp-keepalive
      - "60"
    volumes:
      - evolution_redis:/data
    restart: always
    healthcheck:
      # Usa la salida/exit code directo de redis-cli (sin grep)
      test: ["CMD", "redis-cli", "-u", "redis://127.0.0.1:6379", "ping"]
      interval: 5s
      timeout: 3s
      retries: 15
      start_period: 45s

  postgres:
    container_name: postgres
    image: postgres:15
    networks:
      - evolution-net
    command: ["postgres", "-c", "max_connections=200", "-c", "listen_addresses=*"]
    restart: always
    # ports:
    #   - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: evolution
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d evolution -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  evolution_instances:
  evolution_redis:
  postgres_data:

networks:
  evolution-net:
    name: evolution-net
    driver: bridge
