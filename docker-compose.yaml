services:
  api:
    container_name: evolution_api
    image: evoapicloud/evolution-api:latest
    restart: always
    depends_on:
      redis:
        condition: service_healthy
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    volumes:
      - evolution_instances:/evolution/instances
    networks:
      - evolution-net
    env_file:
      - .env
    environment:
      # asegúrate que .env use estos valores
      REDIS_HOST: redis
      REDIS_PORT: "6379"
      # REDIS_PASSWORD: ""  # si lo habilitas abajo, coloca aquí la misma clave
      # DATABASE_URL: "postgresql://user:pass@postgres:5432/evolution"  # si lo necesita tu build
    expose:
      - "8080"
    healthcheck:
      test: ["CMD", "wget", "-qO-", "http://127.0.0.1:8080/health"]
      interval: 15s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: redis
    networks:
      - evolution-net
    # MODO CACHÉ: sin AOF/RDB para evitar caídas por I/O
    command: >
      redis-server
      --port 6379
      --save ""
      --appendonly no
      --maxmemory 256mb
      --maxmemory-policy allkeys-lru
      --tcp-keepalive 60
      --protected-mode yes
      --daemonize no
      # --requirepass TU_PASSWORD_SEGURA   # opcional si decides protegerlo
    volumes:
      - evolution_redis:/data
    # NO expongas fuera si no hace falta; API se conecta por red interna
    # ports:
    #   - "6379:6379"
    restart: always
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 3s
      retries: 5
    # pequeños “tunings” seguros
    ulimits:
      nofile: 10032
    sysctls:
      net.core.somaxconn: 1024

  postgres:
    container_name: postgres
    image: postgres:15
    networks:
      - evolution-net
    command: ["postgres", "-c", "max_connections=200", "-c", "listen_addresses=*"]
    restart: always
    # Evita exponer 5432 si no gestionas desde fuera del host
    # ports:
    #   - "5432:5432"
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: pass
      POSTGRES_DB: evolution
      POSTGRES_HOST_AUTH_METHOD: trust
    volumes:
      - postgres_data:/var/lib/postgresql/data
    expose:
      - "5432"
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U user -d evolution -h localhost"]
      interval: 10s
      timeout: 5s
      retries: 5

volumes:
  evolution_instances:
  evolution_redis:
  postgres_data:

networks:
  evolution-net:
    name: evolution-net
    driver: bridge
